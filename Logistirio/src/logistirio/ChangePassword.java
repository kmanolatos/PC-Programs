/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logistirio;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author kmanolatos
 */
public class ChangePassword extends javax.swing.JFrame {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newPasswordLabel = new javax.swing.JLabel();
        newConfirmPasswordLabel = new javax.swing.JLabel();
        oldPasswordLabel = new javax.swing.JLabel();
        backArrowLabel = new javax.swing.JLabel();
        changePassButton = new javax.swing.JButton();
        newPasswordText = new javax.swing.JPasswordField();
        newConfirmPasswordText = new javax.swing.JPasswordField();
        oldPasswordText = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Αλλαγή Κωδικού");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        newPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newPasswordLabel.setText("Νέος Κωδικός : ");
        getContentPane().add(newPasswordLabel);
        newPasswordLabel.setBounds(70, 100, 220, 40);

        newConfirmPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newConfirmPasswordLabel.setText("Επιβεβαίωση νέου Κωδικού : ");
        getContentPane().add(newConfirmPasswordLabel);
        newConfirmPasswordLabel.setBounds(50, 180, 340, 40);

        oldPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        oldPasswordLabel.setText("Παλαιός Κωδικός : ");
        getContentPane().add(oldPasswordLabel);
        oldPasswordLabel.setBounds(70, 30, 220, 40);

        backArrowLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backArrowLabelMouseReleased(evt);
            }
        });
        getContentPane().add(backArrowLabel);
        backArrowLabel.setBounds(290, 320, 100, 30);

        changePassButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        changePassButton.setText("Αλλαγή");
        changePassButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                changePassButtonMouseReleased(evt);
            }
        });
        getContentPane().add(changePassButton);
        changePassButton.setBounds(160, 320, 140, 30);
        getContentPane().add(newPasswordText);
        newPasswordText.setBounds(480, 130, 6, 20);
        getContentPane().add(newConfirmPasswordText);
        newConfirmPasswordText.setBounds(470, 220, 6, 20);
        getContentPane().add(oldPasswordText);
        oldPasswordText.setBounds(530, 50, 6, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        getContentPane().setBackground(Color.GRAY);
        oldPasswordLabel.setVisible(false);
        oldPasswordText.setVisible(false);
        newPasswordLabel.setVisible(false);
        newPasswordText.setVisible(false);
        newConfirmPasswordLabel.setVisible(false);
        newConfirmPasswordText.setVisible(false);
        changePassButton.setVisible(false);
        backArrowLabel.setVisible(false);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int w = (int) screenSize.getWidth();
        int h = (int) screenSize.getHeight();
        setSize(w * 50 / 100, h * 62 / 100);
        setLocationRelativeTo(null);
        BufferedImage img = null;
        URL urlToImage = getClass().getResource("/img/backArrow.png");
        try {
            img = ImageIO.read(urlToImage);
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(w * 4 / 100, h * 2 / 100, Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        backArrowLabel.setIcon(imageIcon);
        backArrowLabel.setLocation(w * 3 / 100, h * 3 / 100);
        backArrowLabel.setSize(w * 4 / 100, h * 2 / 100);
        Font currentFont = oldPasswordLabel.getFont();
        oldPasswordLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        oldPasswordLabel.setSize(w * 50 / 100, h * 5 / 100);
        oldPasswordLabel.setLocation(w * 20 / 100, h * 8 / 100);
        oldPasswordText.setLocation(w * 20 / 100, h * 13 / 100);
        oldPasswordText.setSize(w * 12 / 100, h * 4 / 100);
        oldPasswordText.setFont(currentFont.deriveFont(Font.PLAIN, w * 1.7F / 100));
        newPasswordLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        newPasswordLabel.setSize(w * 50 / 100, h * 5 / 100);
        newPasswordLabel.setLocation(w * 20 / 100, h * 20 / 100);
        newPasswordText.setLocation(w * 20 / 100, h * 25 / 100);
        newPasswordText.setSize(w * 12 / 100, h * 4 / 100);
        newPasswordText.setFont(currentFont.deriveFont(Font.PLAIN, w * 1.7F / 100));
        newConfirmPasswordLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        newConfirmPasswordLabel.setSize(w * 50 / 100, h * 5 / 100);
        newConfirmPasswordLabel.setLocation(w * 20 / 100, h * 33 / 100);
        newConfirmPasswordText.setLocation(w * 20 / 100, h * 38 / 100);
        newConfirmPasswordText.setSize(w * 12 / 100, h * 4 / 100);
        newConfirmPasswordText.setFont(currentFont.deriveFont(Font.PLAIN, w * 1.7F / 100));
        changePassButton.setFont(currentFont.deriveFont(Font.BOLD, w * 1 / 100));
        changePassButton.setLocation(w * 18 / 100, h * 47 / 100);
        changePassButton.setSize(w * 16 / 100, h * 5 / 100);
        oldPasswordLabel.setVisible(true);
        oldPasswordText.setVisible(true);
        newPasswordLabel.setVisible(true);
        newPasswordText.setVisible(true);
        newConfirmPasswordLabel.setVisible(true);
        newConfirmPasswordText.setVisible(true);
        changePassButton.setVisible(true);
        backArrowLabel.setVisible(true);
    }//GEN-LAST:event_formWindowOpened

    private void changePassButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePassButtonMouseReleased
        try {
            if (!newPasswordText.getText().equals(newConfirmPasswordText.getText())) {
                JOptionPane.showMessageDialog(this,
                        "Ο νέος κωδικός δεν ταιριάζει!",
                        "Σφάλμα",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                DBExecution execute = new DBExecution();
                int found = execute.CheckAdminPass(oldPasswordText.getText());
                if (found == 0) {
                    JOptionPane.showMessageDialog(this,
                            "Ο παλαιός κωδικός είναι λάθος!",
                            "Σφάλμα",
                            JOptionPane.ERROR_MESSAGE);
                } else {
                    execute.UpsertOrDelete("update admin set password = '" + newPasswordText.getText() + "' where password = '" + oldPasswordText.getText() + "'");
                    JOptionPane.showMessageDialog(this,
                            "Ο κωδικός άλλαξε με επιτυχία!");
                    new Login().setVisible(true);
                    this.dispose();
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ChangePassword.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ChangePassword.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_changePassButtonMouseReleased

    private void backArrowLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backArrowLabelMouseReleased
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backArrowLabelMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backArrowLabel;
    private javax.swing.JButton changePassButton;
    private javax.swing.JLabel newConfirmPasswordLabel;
    private javax.swing.JPasswordField newConfirmPasswordText;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField newPasswordText;
    private javax.swing.JLabel oldPasswordLabel;
    private javax.swing.JPasswordField oldPasswordText;
    // End of variables declaration//GEN-END:variables
}
