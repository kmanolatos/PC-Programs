/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logistirio;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author kmanolatos
 */
public class UpdateCustomerCurrentDebt extends javax.swing.JFrame {

    double xreosi;
    CustomerModel customerModel;
    ArrayList<CustomerModel> model;
    NumberFormat numberFormatter = new DecimalFormat("###,###.##");

    /**
     * Creates new form UpsertCustomerDebt
     */
    public UpdateCustomerCurrentDebt(CustomerModel customerModel, ArrayList<CustomerModel> model) {
        this.customerModel = customerModel;
        this.model = model;
        this.xreosi = customerModel.customerDebt;
        setTitle("Πίστωση Χρέους - " + customerModel.customerName + " " + customerModel.customerSurname);
        initComponents();
    }

    UpdateCustomerCurrentDebt() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateLabel = new javax.swing.JLabel();
        xreosiLabel = new javax.swing.JLabel();
        reasonLabel = new javax.swing.JLabel();
        pistosiLabel = new javax.swing.JLabel();
        ipolipoLabel = new javax.swing.JLabel();
        pistosiText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        backArrowLabel = new javax.swing.JLabel();
        ipolipoText = new javax.swing.JLabel();
        xreosiText = new javax.swing.JLabel();
        reasonText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(204, 0, 51));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(dateLabel);
        dateLabel.setBounds(0, 30, 580, 30);

        xreosiLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        xreosiLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xreosiLabel.setText("Χρέωση :");
        getContentPane().add(xreosiLabel);
        xreosiLabel.setBounds(20, 150, 140, 30);

        reasonLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reasonLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        reasonLabel.setText("Αιτιολογία :");
        getContentPane().add(reasonLabel);
        reasonLabel.setBounds(10, 80, 140, 30);

        pistosiLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pistosiLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pistosiLabel.setText("Πίστωση :");
        getContentPane().add(pistosiLabel);
        pistosiLabel.setBounds(20, 210, 140, 30);

        ipolipoLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ipolipoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ipolipoLabel.setText("Υπόλοιπο :");
        getContentPane().add(ipolipoLabel);
        ipolipoLabel.setBounds(20, 270, 140, 30);

        pistosiText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pistosiTextKeyReleased(evt);
            }
        });
        getContentPane().add(pistosiText);
        pistosiText.setBounds(170, 210, 120, 20);

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateButton.setText("Πίστωση");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updateButtonMouseReleased(evt);
            }
        });
        getContentPane().add(updateButton);
        updateButton.setBounds(390, 230, 110, 23);

        backArrowLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backArrowLabelMouseReleased(evt);
            }
        });
        getContentPane().add(backArrowLabel);
        backArrowLabel.setBounds(470, 40, 90, 30);

        ipolipoText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(ipolipoText);
        ipolipoText.setBounds(360, 290, 90, 30);

        xreosiText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(xreosiText);
        xreosiText.setBounds(280, 160, 110, 40);
        getContentPane().add(reasonText);
        reasonText.setBounds(180, 90, 160, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        getContentPane().setBackground(Color.GRAY);
        backArrowLabel.setVisible(false);
        dateLabel.setVisible(false);
        reasonLabel.setVisible(false);
        reasonText.setVisible(false);
        xreosiLabel.setVisible(false);
        xreosiText.setVisible(false);
        pistosiLabel.setVisible(false);
        pistosiText.setVisible(false);
        ipolipoLabel.setVisible(false);
        ipolipoText.setVisible(false);
        updateButton.setVisible(false);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int w = (int) screenSize.getWidth();
        int h = (int) screenSize.getHeight();
        setSize(w * 50 / 100, h * 72 / 100);
        setLocationRelativeTo(null);
        BufferedImage img = null;
        URL urlToImage = getClass().getResource("/img/backArrow.png");
        try {
            img = ImageIO.read(urlToImage);
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(w * 4 / 100, h * 2 / 100, Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        backArrowLabel.setIcon(imageIcon);
        backArrowLabel.setLocation(w * 3 / 100, h * 3 / 100);
        backArrowLabel.setSize(w * 4 / 100, h * 2 / 100);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate localDate = LocalDate.now();
        Font currentFont = dateLabel.getFont();
        dateLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        dateLabel.setSize(w * 50 / 100, h * 5 / 100);
        dateLabel.setText(dtf.format(localDate));
        dateLabel.setLocation(0, h * 5 / 100);
        reasonLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        reasonLabel.setSize(w * 50 / 100, h * 5 / 100);
        reasonLabel.setLocation(w * -28 / 100, h * 17 / 100);
        reasonText.setLocation(w * 24 / 100, h * 18 / 100);
        reasonText.setSize(w * 12 / 100, h * 4 / 100);
        reasonText.setFont(currentFont.deriveFont(Font.PLAIN, w * 1.7F / 100));
        xreosiLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        xreosiLabel.setSize(w * 50 / 100, h * 5 / 100);
        xreosiLabel.setLocation(w * -28 / 100, h * 26 / 100);
        xreosiText.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        xreosiText.setLocation(w * 24 / 100, h * 27 / 100);
        xreosiText.setSize(w, h * 3 / 100);
        xreosiText.setText(numberFormatter.format(customerModel.customerDebt));
        pistosiLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        pistosiLabel.setSize(w * 50 / 100, h * 5 / 100);
        pistosiLabel.setLocation(w * -28 / 100, h * 35 / 100);
        pistosiText.setLocation(w * 24 / 100, h * 36 / 100);
        pistosiText.setSize(w * 12 / 100, h * 4 / 100);
        pistosiText.setFont(currentFont.deriveFont(Font.PLAIN, w * 1.7F / 100));
        ipolipoLabel.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        ipolipoLabel.setSize(w * 50 / 100, h * 5 / 100);
        ipolipoLabel.setLocation(w * -28 / 100, h * 44 / 100);
        ipolipoText.setFont(currentFont.deriveFont(Font.BOLD, w * 2 / 100));
        ipolipoText.setLocation(w * 24 / 100, h * 45 / 100);
        ipolipoText.setSize(w, h * 3 / 100);
        ipolipoText.setText(numberFormatter.format(customerModel.customerDebt));
        updateButton.setFont(currentFont.deriveFont(Font.BOLD, w * 1 / 100));
        updateButton.setLocation(w * 16 / 100, h * 55 / 100);
        updateButton.setSize(w * 15 / 100, h * 6 / 100);
        backArrowLabel.setVisible(true);
        dateLabel.setVisible(true);
        reasonLabel.setVisible(true);
        reasonText.setVisible(true);
        xreosiLabel.setVisible(true);
        xreosiText.setVisible(true);
        pistosiLabel.setVisible(true);
        pistosiText.setVisible(true);
        ipolipoLabel.setVisible(true);
        ipolipoText.setVisible(true);
        updateButton.setVisible(true);
    }//GEN-LAST:event_formWindowOpened

    private void backArrowLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backArrowLabelMouseReleased
        new SearchCustomer(model).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backArrowLabelMouseReleased

    private void updateButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseReleased
        if (pistosiText.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this,
                    "Πρέπει να συμπληρώσετε το πεδίο Πίστωση!",
                    "Σφάλμα",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Είστε σίγουρος?", "Επιβεβαίωση", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    String getPistosiText = pistosiText.getText().trim().replaceAll("[.]", "").replaceAll(",", ".");
                    if (!getPistosiText.contains(".")) {
                        getPistosiText = getPistosiText + ".00";
                    } else if (getPistosiText.indexOf(".") == getPistosiText.length() - 2) {
                        getPistosiText = getPistosiText + "0";
                    }
                    int index;
                    DBExecution select = new DBExecution();
                    select.UpsertOrDelete("update customers set total_debt = " + Double.parseDouble(ipolipoText.getText().trim().replaceAll("[.]", "").replaceAll(",", ".")) + " where id = " + customerModel.id);
                    select.UpsertOrDelete("insert into customersDebtAnalytical values (" + customerModel.id + ", '" + dateLabel.getText() + "', '" + reasonText.getText().replaceAll("\\\\", "").replaceAll("'", "") + "', " + Double.parseDouble(xreosiText.getText().trim().replaceAll("[.]", "").replaceAll(",", ".")) + ", " + Double.parseDouble(getPistosiText) + ", " + Double.parseDouble(ipolipoText.getText().trim().replaceAll("[.]", "").replaceAll(",", ".")) + ")");
                    CustomerModel temp = new CustomerModel();
                    temp.id = customerModel.id;
                    temp.customerName = customerModel.customerName;
                    temp.customerSurname = customerModel.customerSurname;
                    temp.customerHomePhone = customerModel.customerHomePhone;
                    temp.customerMobilePhone = customerModel.customerMobilePhone;
                    temp.customerDebt = Double.parseDouble(ipolipoText.getText().trim().replaceAll("[.]", "").replaceAll(",", "."));
                    temp.currentYear = customerModel.currentYear;
                    index = (int) (customerModel.id - 1);
                    model.set(index, temp);
                    JOptionPane
                            .showMessageDialog(this,
                                    "Η πίστωση χρέους του πελάτη έγινε με επιτυχία!");
                    new SearchCustomer(model).setVisible(true);
                    this.dispose();
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this,
                            "Η πίστωση χρέους του πελάτη απέτυχε!",
                            "Σφάλμα",
                            JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,
                            "Η πίστωση χρέους του πελάτη πελάτη απέτυχε!",
                            "Σφάλμα",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_updateButtonMouseReleased

    private void pistosiTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pistosiTextKeyReleased
        double pistosiTextDouble, ipolipo = 0;
        if (evt.getKeyCode() == 8 && pistosiText.getText().trim().length() == 0) {
            ipolipoText.setText(numberFormatter.format(customerModel.customerDebt));
        } else {
            if ((evt.getKeyCode() == 8 && pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 1 && pistosiText.getText().trim().indexOf(",") != -1) || (evt.getKeyCode() == 8 && pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 2 && pistosiText.getText().trim().indexOf("0") == pistosiText.getText().trim().length() - 1)) {
                pistosiTextDouble = Double.valueOf(pistosiText.getText().trim().replaceAll("[.]", "").replaceAll(",", ""));
                ipolipo = xreosi - pistosiTextDouble;
                ipolipoText.setText(numberFormatter.format(ipolipo));
            } else {
                if (evt.getKeyCode() != 44) {
                    if (pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 1 && pistosiText.getText().trim().indexOf(",") != -1) {
                        pistosiTextDouble = Double.valueOf(pistosiText.getText().trim().replaceAll("[.]", "").replaceAll(",", ""));
                        pistosiText.setText(numberFormatter.format(pistosiTextDouble));
                        ipolipo = xreosi - pistosiTextDouble;
                        if (ipolipo < 0) {
                            pistosiText.setText(numberFormatter.format(xreosi));
                            ipolipo = 0;
                        }
                        ipolipoText.setText(numberFormatter.format(ipolipo));
                    } else {
                        if (!((pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 2 && evt.getKeyCode() == 48) || (pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 1 && evt.getKeyCode() == 8))) {
                            if (pistosiText.getText().trim().indexOf(",") == pistosiText.getText().trim().length() - 1) {
                                pistosiText.setText(pistosiText.getText().trim().replace(",", ""));
                            }
                            if (pistosiText.getText().trim().length() == 0) {
                                ipolipo = xreosi;
                            } else {
                                pistosiTextDouble = Double.valueOf(pistosiText.getText().trim().replaceAll("[.]", "").replaceAll(",", "."));
                                pistosiText.setText(numberFormatter.format(pistosiTextDouble));
                                ipolipo = xreosi - pistosiTextDouble;
                                if (ipolipo < 0) {
                                    pistosiText.setText(numberFormatter.format(xreosi));
                                    ipolipo = 0;
                                }
                            }
                            ipolipoText.setText(numberFormatter.format(ipolipo));
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_pistosiTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCustomerCurrentDebt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCustomerCurrentDebt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCustomerCurrentDebt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCustomerCurrentDebt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateCustomerCurrentDebt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backArrowLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel ipolipoLabel;
    private javax.swing.JLabel ipolipoText;
    private javax.swing.JLabel pistosiLabel;
    private javax.swing.JTextField pistosiText;
    private javax.swing.JLabel reasonLabel;
    private javax.swing.JTextField reasonText;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel xreosiLabel;
    private javax.swing.JLabel xreosiText;
    // End of variables declaration//GEN-END:variables
}
